CIS Benchmarks for GCP are CIS GKE Benchmark

Making use of Kube Bench in this pipeline

https://github.com/aquasecurity/kube-bench

example looking at the kubelet: 
root@devsecops-cloud:~$ ps -ef | grep kubelet
root      1493     1  4 12:45 ?        00:03:18 /usr/bin/kubelet --bootstrap-kubeconfig=/etc/kubernetes/bootstrap-kubelet.conf --kubeconfig=/etc/kubernetes/kubelet.conf --config=/var/lib/kubelet/config.yaml --network-plugin=cni --pod-infra-container-image=k8s.gcr.io/pause:3.2
root      4501  4471  7 12:46 ?        00:04:49 kube-apiserver --advertise-address=10.0.0.4 --allow-privileged=true --authorization-mode=Node,RBAC --client-ca-file=/etc/kubernetes/pki/ca.crt --enable-admission-plugins=NodeRestriction --enable-bootstrap-token-auth=true --etcd-cafile=/etc/kubernetes/pki/etcd/ca.crt --etcd-certfile=/etc/kubernetes/pki/apiserver-etcd-client.crt --etcd-keyfile=/etc/kubernetes/pki/apiserver-etcd-client.key --etcd-servers=https://127.0.0.1:2379 --insecure-port=0 --kubelet-client-certificate=/etc/kubernetes/pki/apiserver-kubelet-client.crt --kubelet-client-key=/etc/kubernetes/pki/apiserver-kubelet-client.key --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname --proxy-client-cert-file=/etc/kubernetes/pki/front-proxy-client.crt --proxy-client-key-file=/etc/kubernetes/pki/front-proxy-client.key --requestheader-allowed-names=front-proxy-client 
--requestheader-client-ca-file=/etc/kubernetes/pki/front-proxy-ca.crt --requestheader-extra-headers-prefix=X-Remote-Extra- --requestheader-group-headers=X-Remote-Group --requestheader-username-headers=X-Remote-User --secure-port=6443 --service-account-issuer=https://kubernetes.default.svc.cluster.local --service-account-key-file=/etc/kubernetes/pki/sa.pub --service-account-signing-key-file=/etc/kubernetes/pki/sa.key --service-cluster-ip-range=10.96.0.0/12 --tls-cert-file=/etc/kubernetes/pki/apiserver.crt --tls-private-key-file=/etc/kubernetes/pki/apiserver.key
root     10505  9528  0 13:54 pts/0    00:00:00 grep --color=auto kubelet

Looking at the config in: 
apiVersion: kubelet.config.k8s.io/v1beta1                                                          68
authentication:
  anonymous:
    enabled: false <-- if this was true Kube bench would thorw an alert based on an existing test

Running as a docker containter
docker run --pid=host -v /etc:/etc:ro -v /var:/var:ro -t aquasec/kube-bench:latest --version 1.18

Example of fixing a result from a scan: 
This is on the master node
[FAIL] 1.1.12 Ensure that the etcd data directory ownership is set to etcd:etcd (Automated) 

The report shows the remediation:
1.1.12 On the etcd server node, get the etcd data directory, passed as an argument --data-dir,     
from the below command:
ps -ef | grep etcd
Run the below command (based on the etcd data directory found above).
For example, chown etcd:etcd /var/lib/etcd

Fix: 
root@devsecops-cloud:~$ chown etcd:etcd /var/lib/etcd
chown: invalid user: ‘etcd:etcd’
root@devsecops-cloud:~$ useradd etcd
root@devsecops-cloud:~$ chown etcd:etcd /var/lib/etcd

It now passes the scan: 
[PASS] 1.1.12 Ensure that the etcd data directory ownership is set to etcd:etcd (Automated)  


I am unable to get this working on my VM. the installer is having permission issues
